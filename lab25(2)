#define _CRT_SECURE_NO_DEPRECATE
#include <stdio.h>
#include <locale.h>
#include <math.h>
#include <conio.h>
#include <stdlib.h>
#include <malloc.h>

int rand10(int mmax); // целое число от 1 до mmax
double rand_double(double dmin, double dmax);//вещественное число в заданном диапазоне
int* random(int n, int mmax); // n целых чисел от 1 до mmax
double* random_double(int n, double dm);//n вещественных чисел в диапазоне от -dm до +dm

int main() {
	int mx, c =-1;
	double dmx, dmn, dm;
	int size = 0;
	setlocale(LC_ALL, "rus");
	int* arr = (int*)malloc(size * sizeof(int));
	double* arr1 = (double*)malloc(size * sizeof(double));
	int* ptr = &arr;

	while (c != 0)
	{
		printf("Выберите действие: 1) Генерация случайного положительного целого числа; 2) Генерация случайного вещественного числа; 3) Генерация n случайных целых чисел; 4) Генерация n случайных вещественных чисел; 0) Закончить выполнение программы.\n");
		scanf("%d", &c);
		switch (c)
		{
		case(1):
			printf("Введите максимальное целое число, отличное от нуля:\n");
			scanf("%d", &mx);
			printf("случайное число = %d\n", rand10(mx));
			break;

		case(2):
			printf("Введите минимальное вещественное число для диапозона, отличное от нуля:\n");
			scanf("%lf", &dmn);
			printf("Введите максимальное вещественное число для диапозона, отличное от нуля:\n");
			scanf("%lf", &dmx);
			printf("Случайное вещественное число в диапозоне (%.2lf;%.2lf) = %.2lf\n", dmn, dmx, rand_double(dmn, dmx));
			break;

		case(3):
			printf("Введите размер массива:\n");
			scanf("%d", &size);
			printf("Введите максимальное целое число, отличное от нуля:\n");
			scanf("%d", &mx);
			printf("\n");
			arr = random(size, mx);
			for (int i = 0; i < size; i++) {
				printf("array[%d] = %d \n",i, arr[i]);
			}
			break;

		case(4):
			printf("Введите размер массива:\n");
			scanf("%d", &size);
			printf("Введите вещественное число, отличное от нуля:\n");
			scanf("%lf", &dm);
			printf("\n");
			arr1 = random_double(size, dm);
			for (int i = 0; i < size; i++) {
				printf("array[%d] = %.2lf \n",i, arr1[i]);
			}
			break;

		default:
			break;
		}
		printf("\n");
	}
}

int rand10(int mmax) {
	int x;
	x = 1 + rand() % mmax;
	return x;
}

double rand_double(double dmin, double dmax) {
	if (dmin>dmax) {
		printf("Введенного диапозона не существует\n");
		return 0;
	}
	double x;
	x = dmin + 1.f * (dmax - dmin) * rand() / RAND_MAX;
	return x;
}

int* random(int n, int mmax) {
	int* arr = (int*)malloc(n * sizeof(int));
	for (int i = 0; i < n; i++) {
		arr[i] = rand10(mmax);
	}
	return arr;
}

double* random_double(int n, double dm) {
	double* arr1 = (double*)malloc(n * sizeof(double));
	for (int i = 0; i < n; i++) {
		arr1[i] = rand_double(-dm, dm);
	}
	return arr1;
}
